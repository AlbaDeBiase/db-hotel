● Seleziona tutti gli ospiti che sono stati identificati con la carta di
identità
SELECT *
FROM `ospiti` 
WHERE document_type = 'CI'

● Seleziona tutti gli ospiti che sono nati dopo il 1988

SELECT *
FROM `ospiti` 
WHERE YEAR(date_of_birth) > 1988;

● Seleziona tutti gli ospiti che hanno più di 20 anni (al momento
dell’esecuzione della query)

SELECT *
FROM `ospiti` 
WHERE YEAR(CURRENT_DATE) - YEAR(date_of_birth) > 20
oppure
WHERE YEAR(CURRENT_TIMESTAMP) - YEAR(date_of_birth) > 20
WHERE TIMESTAMPDIFF(YEAR, date_of_birth, CURRENT_DATE) > 20
WHERE TIMESTAMPDIFF(YEAR, date_of_birth, NOW) > 20
WHERE date_of_birth SUBDATE(CURRENT_DATE, INTERVAL, > 21)

●Seleziona tutti gli ospiti il cui nome inizia con la D

SELECT *
FROM `ospiti` 
WHERE name LIKE 'D%'
oppure
WHERE LOCATE('d', 'name') =1

● Calcola il totale degli ordini accepted
SELECT SUM price AS 'totale'
FROM `pagamenti` 
WHERE status = 'accepted'

● Qual è il prezzo massimo pagato?

SELECT max(`price`)
FROM `pagamenti` 
WHERE status = 'accepted'
oppure
ORDER BY Price DESC
LIMIT 1 

● Seleziona gli ospiti riconosciuti con patente e nati nel 1975

SELECT *
FROM `ospiti` 
WHERE document_type = 'driver license' 
AND YEAR(date_of_birth) = 1975

AND date_of_birth BETWEEN '1975-01-01' AND 1975-12-31'

● Quanti paganti sono anche ospiti?
SELECT COUNT(*) 
FROM `paganti` 
WHERE ospite_id is NOT NULL
oppure
select COUNT(DISTINCT(ospite_id))
FROM `paganti` 

● Quanti posti letto ha l’hotel in totale?
SELECT SUM(beds)
FROM `stanze` 



GROUP


●Conta gli ospiti raggruppandoli per anno di nascita

SELECT COUNT(id) ,YEAR(date_of_birth)
FROM `ospiti` 
GROUP BY YEAR(date_of_birth)

ok
●Somma i prezzi dei pagamenti raggruppandoli per status

SELECT SUM(price)
FROM pagamenti
GROUP BY status
ok
●Conta quante volte è stata prenotata ogni stanza

SELECT COUNT(id)
FROM `prenotazioni` 
GROUP BY stanza_id
ok
●Fai una analisi per vedere se ci sono ore in cui le prenotazioni sono più frequenti

SELECT (*)
FROM prenotazioni
GROUP BY hour(created_at)
ORDER BY prenotazioni DESC
ok

●Quante prenotazioni ha fatto l’ospite che ha fatto più prenotazioni?

SELECT COUNT(ospite_id), ospite_id  
FROM prenotazioni_has_ospiti 
GROUP BY ospite_id;
ORDER BY ospite_id DESC
ok


JOIN

●Come si chiamano gli ospiti che hanno fatto più di due prenotazioni?
SELECT COUNT(*), `ospiti`.`name` AS `nome_ospite`, `ospiti`.`lastname` AS `cognome_ospite`
FROM ospiti
JOIN prenotazioni_has_ospiti
ON ospiti.id = prenotazioni_has_ospiti.ospite_id
GROUP BY ospiti.name, ospiti.lastname
HAVING COUNT(*) > 2
ORDER BY COUNT(*) DESC ;


●Stampare tutti gli ospiti per ogni prenotazione

SELECT name AS nome, lastname AS cognome, prenotazioni_has_ospiti.prenotazione_id AS numero_pr
FROM ospiti
JOIN prenotazioni_has_ospiti
ON ospiti.id = prenotazioni_has_ospiti.ospite_id

●Stampare Nome, Cognome, Prezzo e Pagante per tutte le prenotazioni fatte a Maggio 2018

SELECT name AS nome, lastname AS cognome, prenotazioni_has_ospiti.prenotazione_id AS numero_pr, prenotazioni_has_ospiti.created_at 
FROM ospiti
JOIN prenotazioni_has_ospiti
ON ospiti.id = prenotazioni_has_ospiti.ospite_id
WHERE MONTH(prenotazioni_has_ospiti.created_at) = 5 

●Fai la somma di tutti i prezzi delle prenotazioni per le stanze del primo piano

SELECT SUM(price)
FROM pagamenti
JOIN stanze
ON pagamenti.id = stanze.id
WHERE pagamenti.status = 'accepted'
AND floor = 1 

●Prendi i dati di fatturazione per la prenotazione con id=7

SELECT *
FROM `prenotazioni` 
JOIN pagamenti
ON prenotazioni.id = pagamenti.prenotazione_id 
WHERE prenotazione_id = 7

●Le stanze sono state tutte prenotate almeno una volta? 
(Visualizzare le stanze non ancora prenotate)


